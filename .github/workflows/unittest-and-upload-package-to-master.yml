# 이 워크플로는
# 1. UnityProject/Assets/Package(=env.WORK_PATH)를 UnityProject/Packages(=env.PACKAGES_PATH)로 Move
#
# 2. Local Package인 채로 Unity-UnitTest 실행
# 2-1. 문제가 있으면 Artifact에 버그 리포트 및 중단,
# 2-2. 문제가 없으면 2로 넘어갑니다.
#
# 3. UnityProject/Packages를 Artifacts에 Upload를 한 뒤 {this_GithubRepository}의 master brach에 push합니다.
#
# workflow syntax
# https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions

name: unittest and upload package to master

on:
  push:
    branches:
      - workspace

env:
  # Require unity test
  UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
  UNITY_VERSION: 2019.3.8f1

  # require Deploy
  SRC_BRANCH: workspace
  DEST_OWNER: unity-korea-community
  DEST_BRANCH: master
  WORK_PATH: Packages/${{ github.event.repository.name }}
  PACKAGES_PATH: Packages

jobs:
  testAllModes:
    name: Test in ${{ matrix.testMode }} on version ${{ matrix.unityVersion }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        testMode:
          - playmode
          - editmode

    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ env.SRC_BRANCH }}
          lfs: true

      - uses: actions/cache@v1.1.0
        with:
          path: ${{ matrix.projectPath }}/Library
          key: Library-${{ matrix.projectPath }}
          restore-keys: |
            Library-

      # WORK_PATH(=UnityPath)가 변경되면 테스트, 변경되지 않으면 테스트 안함
      - uses: technote-space/get-diff-action@v4.0.1
        with:
          PATTERNS: |
            ${{ env.WORK_PATH }}/**/*.cs

      # 예전 버전으로 하면 라이센스 인증이 안됨.. 그래서 동작하는 알파로 변경
      - uses: game-ci/unity-test-runner@v2.0-alpha-4 # https://github.com/marketplace/actions/unity-test-runner
        if: env.GIT_DIFF
        id: tests
        with:
          githubToken: ${{ secrets.GITHUB_TOKEN }}
          testMode: ${{ matrix.testMode }}
          artifactsPath: ${{ matrix.testMode }}-artifacts
          unityVersion: ${{ env.UNITY_VERSION }}

      - uses: actions/upload-artifact@v2
        if: env.GIT_DIFF
        with:
          name: Test results for ${{ matrix.testMode }}
          path: ${{ steps.tests.outputs.artifactsPath }}

  deploy:
    needs: testAllModes
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2 # 새로운 job이기 때문에 다시 checkout을 해야 합니다.
        with:
          ref: ${{ env.DEST_BRANCH }}
          lfs: true

      - uses: actions/upload-artifact@v2
        with:
          name: Package
          path: ${{ env.WORK_PATH }}/

      - uses: andstor/copycat-action@v3.2.3 # https://github.com/marketplace/actions/copycat-action
        with:
          personal_token: ${{ secrets.ACCESS_TOKEN }} #require
          src_branch: ${{ env.SRC_BRANCH }}
          src_path: ${{ env.WORK_PATH }}/. #require, .을 안붙이면 dst_path에 src_path 폴더채로 카피됨
          dst_owner: ${{ env.DEST_OWNER }} #require
          dst_repo_name: ${{ github.event.repository.name }} #require
          dst_branch: ${{ env.DEST_BRANCH }}
          dst_path: /.
          clean: true
