# 이 워크플로는
# 1. Unity-UnitTest 실행 후 결과에 따라
# 1-1. 문제가 있으면 Artifact에 버그 리포트 및 중단,
# 1-2. 문제가 없으면 2로 넘어갑니다.
#
# 2. Packages를 Artifacts에 Upload를 한 뒤 {this_GithubRepo}의 master brach에 push합니다.
#
# workflow syntax
# https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions

name: unittest and upload master

on:
  push:
    branches:
      - workspace

env:
  # Require unity test
  UNITY_VERSION: 2019.2.11f1
  UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
  WORK_ROOT: Assets/unity-cmd/

  # Deploy to this Github master branch
  this_GithubRepo: unity-korea-community/unity-cmd

jobs:
  testAllModes:
    name: Test in ${{ matrix.testMode }} on version ${{ matrix.unityVersion }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        testMode:
          - playmode
          - editmode

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: workspace
          lfs: true

      - name: Cached
        uses: actions/cache@v1.1.0
        with:
          path: Library
          key: Library-${{ matrix.targetPlatform }}
          restore-keys: |
            Library-

      - name: Run tests
        id: tests
        uses: game-ci/unity-test-runner@v1.7 # https://github.com/marketplace/actions/unity-test-runner
        with:
          # projectPath: /
          githubToken: ${{ secrets.GITHUB_TOKEN }}
          testMode: ${{ matrix.testMode }}
          artifactsPath: ${{ matrix.testMode }}-artifacts
          unityVersion: ${{ env.UNITY_VERSION }}

      - uses: actions/upload-artifact@v2
        if: always()
        with:
          name: Test results for ${{ matrix.testMode }}
          path: ${{ steps.tests.outputs.artifactsPath }}

  deploy:
    needs: testAllModes
    runs-on: ubuntu-latest

    steps:
      - name: Checkout # 새로운 job이기 때문에 다시 checkout을 해야 합니다.
        uses: actions/checkout@v2

      - name: Upload site artifact
        uses: actions/upload-artifact@v1
        with:
          name: Package
          path: ${{ env.WORK_ROOT }}

      - name: Deploy
        uses: JamesIves/github-pages-deploy-action@4.1.1 # https://github.com/JamesIves/github-pages-deploy-action
        with:
          ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
          BRANCH: main
          FOLDER: ${{ env.WORK_ROOT }}
          REPOSITORY_NAME: ${{ env.this_GithubRepo }}
          TARGET_FOLDER: /
          CLEAN: true
